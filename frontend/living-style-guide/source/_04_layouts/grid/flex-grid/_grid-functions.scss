@use "sass:map";
@use "sass:list";

/* ------------------------------------ *\
  * GRID FUNCTIONS
\* ------------------------------------ */

/// Get the infix for a given breakpoint in a list of breakpoints. Useful for generating the size part in a selector, for example: `.prefix--col-sm-2`.
/// @param {String} $name - The name of the breakpoint
/// @return {String}
/// @access public

@function breakpoint-infix($name) {
  @return "-#{$name}";
}

/// Get the value of the next breakpoint, or null for the last breakpoint
/// @param {String} $name - The name of the breakpoint
/// @param {Map} $breakpoints [$breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint
/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map
/// @return {String}
/// @access public

@function breakpoint-next(
  $name,
  $breakpoints: $breakpoints,
  $breakpoint-names: map.keys($breakpoints)
) {
  $n: list.index($breakpoint-names, $name);
  @if $n != null and $n < list.length($breakpoint-names) {
    @return list.nth($breakpoint-names, $n + 1);
  }
  @return null;
}

/// Get the value of the previous breakpoint, or null for the first breakpoint
/// @param {String} $name - The name of the breakpoint
/// @param {Map} $breakpoints [$breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint
/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map
/// @return {String}
/// @access public
@function breakpoint-prev(
  $name,
  $breakpoints: $breakpoints,
  $breakpoint-names: map.keys($breakpoints)
) {
  $n: list.index($breakpoint-names, $name);
  @if $n != null and $n > 1 {
    @return list.nth($breakpoint-names, $n - 1);
  }
  @return null;
}

/// Check to see if the given breakpoint name
/// @param {String} $name - The name of the breakpoint
/// @param {Map} $breakpoints [$breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint
/// @return {Bool}
/// @access public
@function is-smallest-breakpoint($name, $breakpoints: $breakpoints) {
  @return index(map-keys($breakpoints), $name) == 1;
}
