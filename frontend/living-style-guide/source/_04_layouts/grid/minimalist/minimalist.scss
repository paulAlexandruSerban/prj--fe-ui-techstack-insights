@import "../common/no-gutter.scss";
//amount of columns
$columns: 12;

$margin-left: 1%;

@include no-gutter();

.container {
  position: relative;
  margin: 0 auto;
  padding: 0 10px;
  @media (min-width: $tablet) {
    padding: 0;
    width: 85%;
  }
  width: 100%;
  max-width: $max-width;
  box-sizing: border-box;
}

.row {
  margin-left: -$margin-left;
}

.container::after,
.row::after {
  content: "";
  display: table;
  clear: both;
}

//smartphone
@for $i from 1 to $columns + 1 {
  $grid: ($i / $columns) * 100% - $margin-left;
  .col-smartphone-#{$i} {
    width: $grid;
  }
}

//tablet
@media (min-width: $tablet) {
  @for $i from 1 to $columns + 1 {
    $grid: ($i / $columns) * 100% - $margin-left;
    .col-tablet-#{$i} {
      width: $grid;
    }
  }
}

//desktop
@media (min-width: $desktop) {
  @for $i from 1 to $columns + 1 {
    $grid: ($i / $columns) * 100% - $margin-left;
    .col-desktop-#{$i} {
      width: $grid;
    }
  }
}

%divstyle {
  float: left;
  padding-left: $gutter;
  padding-right: $gutter;
  margin-left: $margin-left;
  margin-bottom: $baseline;
  box-sizing: border-box;
}

@for $i from 1 to $columns + 1 {
  .col-smartphone-#{$i},
  .col-desktop-#{$i},
  .col-tablet-#{$i} {
    @extend %divstyle;
  }
}

//offset
@media (min-width: $mobile) {
  @for $i from 1 to $columns + 1 {
    $grid: ($i / $columns) * 100% + $margin-left;
    .offset-#{$i} {
      margin-left: $grid;
    }
  }
}

%small-smartphone-div {
  @media (max-width: $mobile) {
    $max-width: 100% - $margin-left;
    width: $max-width;
  }
}

//force 100% width for too small resolutions
@for $i from 1 to $columns + 1 {
  .col-smartphone-#{$i} {
    @extend %small-smartphone-div;
  }
}

//helper classes
.full-width {
  width: 100%;
}
.right {
  float: right;
}
.left {
  float: left;
}

.hidden-smartphone {
  @media (max-width: $tablet - 1px) {
    display: none;
  }
}
.hidden-tablet {
  @media (max-width: $desktop - 1px) {
    display: none;
  }
}
