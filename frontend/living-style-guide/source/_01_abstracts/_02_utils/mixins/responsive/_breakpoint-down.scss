/// Generate a media query for the maximum width of the given styles
/// @param {String | Number} $name
/// @param {Map} $breakpoints [$breakpoints] - A map of breakpoints where the key is the name
/// @content
/// @access public

@mixin breakpoint-down($name, $breakpoints: $breakpoints) {
  @if meta.type-of($name) == "number" {
    @media (max-width: $name) {
      @content;
    }
  } @else if map.has-key($breakpoints, $name) {
    // We borrow this logic from bootstrap for specifying the value of the
    // max-width. The maximum width is calculated by finding the breakpoint and
    // subtracting .02 from its value. This value is used instead of .01 to
    // avoid rounding issues in Safari
    // https://github.com/twbs/bootstrap/blob/c5b1919deaf5393fcca9e9b9d7ce9c338160d99d/scss/mixins/_breakpoints.scss#L34-L46
    $breakpoint: map.get($breakpoints, $name);
    $width: map.get($breakpoint, width) - 0.02;
    @media (max-width: $width) {
      @content;
    }
  } @else {
    @error "Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map.keys($breakpoints)})";
  }
}
